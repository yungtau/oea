<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Description>用于生成 OEA 实体类的模板</Description>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
            <Title>OEA_Entity_Criteria</Title>
            <Author>HuQingfang</Author>
            <Shortcut>OEA_Entity_Criteria</Shortcut>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>NAMESPACE</ID>
                    <Default>OEA</Default>
                </Literal>
                <Literal>
                    <ID>CriteraName</ID>
                    <Default>CriteraName</Default>
                </Literal>
            </Declarations>
            <Code Language="csharp">
                <![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using OEA.Library;
using OEA.MetaModel;
using OEA.MetaModel.Attributes;
using OEA.MetaModel.View;

namespace $NAMESPACE$
{
    [QueryEntity, Serializable]
    public class $CriteraName$ : Criteria
    {
        public static readonly Property<string> NameProperty = P<$CriteraName$>.Register(e => e.Name);
        public string Name
        {
            get { return this.GetProperty(NameProperty); }
            set { this.SetProperty(NameProperty, value); }
        }$end$
    }

    internal class $CriteraName$Config : EntityConfig<$CriteraName$>
    {
        protected override void ConfigView()
        {
            using (View.OrderProperties())
            {
                View.Property($CriteraName$.NameProperty).HasLabel("名称").ShowIn(ShowInWhere.Detail).FireNavigation();
            }
        }
    }
}]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>