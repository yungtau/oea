<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:rafy="clr-namespace:Rafy.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Rafy.WPF.Controls;component/SplitButton/themes/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <rafy:FalseToHiddenVisibilityConverter x:Key="FalseToHiddenVisibilityConverter" />
    <LinearGradientBrush x:Key="HighlightHeaderBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource Color3}" />
        <GradientStop Color="White" Offset="0.5" />
        <GradientStop Color="{DynamicResource Color3}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TreeGridHeader_MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource Color2}" Offset="0" />
        <GradientStop Color="White" Offset="0.5" />
        <GradientStop Color="{DynamicResource Color2}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TreeGridHeader_PressedBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource Color1}" Offset="-0.2" />
        <GradientStop Color="White" Offset="0.5" />
        <GradientStop Color="{DynamicResource Color1}" Offset="1.2" />
    </LinearGradientBrush>

    <!-- TreeGridColumnHeader 树型控件一般列头 -->
    <Style TargetType="{x:Type rafy:TreeGridColumnHeader}">
        <Style.Resources>
            <ControlTemplate x:Key="HeaderGripperTemplate" TargetType="{x:Type Thumb}">
                <Border Background="Transparent" />
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource HighlightHeaderBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush1}" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rafy:TreeGridColumnHeader}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="HeaderBorder" Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <TextBlock x:Name="HeaderContent" Text="{TemplateBinding Content}" TextWrapping="Wrap"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <!--<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                        </Border>
                        <!--放在右边拖拽的 Thumb-->
                        <Canvas>
                            <Thumb IsTabStop="False" x:Name="PART_HeaderGripper" Canvas.Right="-9"
                                    Height="{TemplateBinding ActualHeight}" Width="18"
                                    Template="{StaticResource HeaderGripperTemplate}" />
                        </Canvas>
                        <!--用于显示排序的方向-->
                        <Path Name="SortDirectionPath" Data="M0,1 H1 L0.5,0 Z" Visibility="Collapsed" Stroke="Silver"
                                Fill="Silver" Stretch="Fill" Width="8" Height="8" HorizontalAlignment="Right"
                                VerticalAlignment="Center" Margin="0,0,5,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="HeaderBorder"
                                    Value="{StaticResource TreeGridHeader_MouseOverBrush}" />
                            <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="HeaderBorder"
                                    Value="{StaticResource TreeGridHeader_PressedBrush}" />
                            <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden" />
                            <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortDirectionPath" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortDirectionPath" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortDirectionPath" Property="Data" Value="M0,0 H1 L0.5,1 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeGridColumnSummary 合计行单元格 -->
    <Style TargetType="{x:Type rafy:TreeGridColumnSummary}">
        <Setter Property="Background" Value="{StaticResource HighlightHeaderBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush1}" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <!--<Setter Property="MaxHeight" Value="30" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rafy:TreeGridColumnSummary}">
                    <Border x:Name="HeaderBorder" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <TextBlock x:Name="SummaryContent" Text="{TemplateBinding SummaryText}" TextWrapping="Wrap"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSummaryVisible" Value="false">
                            <Setter TargetName="SummaryContent" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeGrid 树型控件-->
    <Style TargetType="{x:Type rafy:TreeGrid}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#00FFFFFF" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!--使用 TreeGridRowsPanel 来实现行列虚拟化-->
                    <rafy:TreeGridRowsPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SummaryRowTitleStyle">
            <Setter.Value>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="1,0,0,0" />
                    <Setter Property="Padding" Value="4,0,0,0" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rafy:TreeGrid}">
                    <Border BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}" Name="Bd"
                            Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                        <ScrollViewer Name="mainScrollViewer" Background="{TemplateBinding Background}"
                                Focusable="false" CanContentScroll="False"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--三行分别是：Header、Body、SummaryRow-->
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <!--Header 行的 ZIndex 设置为 1，最后渲染，这样不会被行遮盖。-->
                                <rafy:TreeGridHeaderRowPresenter Panel.ZIndex="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--TreeGrid 的所有行（Body）-->
                                <Grid Grid.Row="1">
                                    <!--ItemsPresenter 必须应该使用 ItemsPresenter 作为名称，或者直接放到 ScrollViewer 内，否则 UIV 将会失效。原因见：ScrollContentPresenter.HookupScrollingComponents 方法。-->
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <!--显示“没有数据”的 TextBlock-->
                                    <TextBlock Text="{TemplateBinding NoDataText}" IsHitTestVisible="False"
                                            Opacity="0.5" TextWrapping="Wrap" FontSize="36" TextAlignment="Center"
                                            VerticalAlignment="Center" HorizontalAlignment="Center"
                                            FontFamily="STCaiyun" RenderTransformOrigin="0.5,0.5" Foreground="#80000000">
                                        <TextBlock.Visibility>
                                            <MultiBinding>
                                                <MultiBinding.Converter>
                                                    <rafy:ItemsControlNoDataConverter />
                                                </MultiBinding.Converter>
                                                <Binding Path="RootItems"
                                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Path="Items.Count"
                                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </TextBlock.Visibility>
                                        <TextBlock.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.5" />
                                                <SkewTransform AngleX="-30" />
                                                <RotateTransform Angle="-30" />
                                            </TransformGroup>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                                <!--合计行-->
                                <rafy:TreeGridSummaryRowPresenter x:Name="SummaryRow" Grid.Row="2" Visibility="Collapsed" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsSummaryRowVisible" Value="true">
                            <Setter TargetName="SummaryRow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="mainScrollViewer" Property="CanContentScroll" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeGridRow 行-->
    <Style TargetType="{x:Type rafy:TreeGridRow}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=ItemsControl}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=ItemsControl}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="rafy:TreeGridRow">
                    <Grid x:Name="grid">
                        <Grid.RowDefinitions>
                            <!--行高在这里设置，注意：需要设置最小行高高度，否则 UIV 失效！-->
                            <RowDefinition Height="Auto" MinHeight="20" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="Bd" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <rafy:TreeGridCellsPresenter />
                        </Border>
                        <ItemsPresenter Name="ItemsHost" Grid.Row="1"
                                Visibility="{TemplateBinding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource TreeGridRow_HoverRowBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource TreeGridRow_SelectedRowBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid" Value="0.65" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsAlternatingRow" Value="true">
                <Setter Property="Background"
                        Value="{Binding AlternatingRowBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rafy:TreeGrid}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TreeGridRowPresenter -->
    <Style TargetType="{x:Type rafy:TreeGridCellsPresenter}">
        <Style.Resources>
            <rafy:LevelToIndentConverter x:Key="LevelToIndentConverter" />
            <Style TargetType="ToggleButton" x:Key="ExpanderStyle">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Width" Value="19" />
                <Setter Property="Height" Value="20" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Height="17" Width="19" Background="#00FFFFFF">
                                <Border Height="9"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                        Width="9" BorderThickness="1,1,1,1"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        SnapsToDevicePixels="True">
                                    <Path Margin="1,1,1,1" Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z"
                                            Fill="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                                            Name="ExpandPath" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="Path.Data" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <StreamGeometry>M0,2L0,3 5,3 5,2z</StreamGeometry>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rafy:TreeGridCellsPresenter}">
                    <rafy:TreeGridCellsPanel IsItemsHost="True"
                            FirstColumnIndent="{Binding Level,Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rafy:TreeGridRow}, AncestorLevel=1},ConverterParameter=19}">
                        <rafy:TreeGridCellsPanel.RowHeader>
                            <ContentPresenter
                                    Content="{Binding RowNo, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rafy:TreeGridRow}, AncestorLevel=1}}" />
                        </rafy:TreeGridCellsPanel.RowHeader>
                        <rafy:TreeGridCellsPanel.Expander>
                            <ToggleButton Style="{StaticResource ExpanderStyle}"
                                    Visibility="{Binding HasChild, Converter={StaticResource FalseToHiddenVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rafy:TreeGridRow}, AncestorLevel=1}}"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rafy:TreeGridRow}, AncestorLevel=1}}" />
                        </rafy:TreeGridCellsPanel.Expander>
                    </rafy:TreeGridCellsPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeGridCell 单元格-->
    <Style TargetType="{x:Type rafy:TreeGridCell}">
        <!--最小行高应该在 Cell 上设置，否则会造成 Cell A 过高，而 Cell B 中的内部居中后在界面显示不出来。-->
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="BorderBrush" Value="Silver" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <!--设置 Margin 为负数，让边框重合-->
        <Setter Property="Margin" Value="-0.5,0,0,0" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rafy:TreeGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditing" Value="True">
                <Setter Property="Padding" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- FocusTrackerControl-->
    <Style TargetType="{x:Type rafy:FocusTrackerControl}">
        <Setter Property="BorderBrush" Value="Green" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rafy:FocusTrackerControl}">
                    <Canvas>
                        <Border x:Name="PART_Decorator" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Effect>
                                <BlurEffect />
                            </Border.Effect>
                        </Border>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>