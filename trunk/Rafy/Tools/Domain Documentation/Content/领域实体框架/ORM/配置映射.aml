<?xml version="1.0" encoding="utf-8"?>
<topic id="eba03db2-2a71-4499-9dcd-99e0c37fe10e" revisionNumber="1">
    <developerConceptualDocument
      xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
      xmlns:xlink="http://www.w3.org/1999/xlink">

        <introduction>
            <autoOutline/>
        </introduction>

        <section address="des">
            <title>说明</title>
            <content>
                <para>
                    实体与数据库之间如何映射，是通过实体配置 <codeInline>EntityConfig</codeInline> 类中的 <codeInline>ConfigMeta</codeInline> 方法来完成的。例如：
                </para>
                <code language="cs">
                    <![CDATA[/// <summary>
/// 仓库 配置类。
/// 负责 仓库 类的实体元数据、界面元数据的配置。
/// </summary>
internal class WarehouseConfig : JXCEntityConfig<Warehouse>
{
    /// <summary>
    /// 配置实体的元数据
    /// </summary>
    protected override void ConfigMeta()
    {
        //配置实体的所有属性都映射到数据表中。
        Meta.MapTable().MapAllProperties();
    }
}]]>
                </code>
                <para>一个实体可以对应多个实体配置类型。一般情况下，则只有一个实体配置类。只有在扩展程序集想要对主干程序集中的实体的元数据进行修改时，可以在扩展程序集中声明更多的实体配置来配置指定的实体。</para>
            </content>
        </section>

        <section address="table">
            <title>配置表映射</title>
            <content>
                <para>使用对 EntityMeta 进行配置的扩展方法 MapTable 即可配置该类到表的映射。</para>
                <list class="bullet">
                    <listItem>
                        <para>MapTable()</para>
                        <para>映射类到数据库中的同名表。</para>
                    </listItem>
                    <listItem>
                        <para>MapTable(string tableName)</para>
                        <para>映射类到数据库中的指定表名的表。</para>
                    </listItem>
                </list>
            </content>
        </section>

        <section address="property">
            <title>配置字段映射</title>
            <content>
                <para>可以使用以下三个方法对属性批量配置映射：</para>
                <list class="bullet">
                    <listItem>
                        <para>MapAllProperties()</para>
                        <para>此方法会映射实体中所有属性到表中同名的列。</para>
                    </listItem>
                    <listItem>
                        <para>MapAllPropertiesExcept(params IManagedProperty[] exceptProperties)</para>
                        <para>此方法会映射实体中除了指定的属性外的其余属性到表中同名的列。</para>
                    </listItem>
                    <listItem>
                        <para>MapProperties(params IManagedProperty[] properties)</para>
                        <para>此方法会映射实体中指定的属性到表中同名的列。</para>
                    </listItem>
                </list>

                <para>同时，还可以对单一属性如何映射到数据库做单独的配置。例如以下代码，它把 Name 属性映射为列 WHName 并设置为可空列：</para>
                <code language="cs">
                    <![CDATA[Meta.Property(Warehouse.NameProperty).MapColumn().HasColumnName("WHName").IsNullable();]]>
                </code>
            </content>
        </section>

        <relatedTopics>
        </relatedTopics>
    </developerConceptualDocument>
</topic>
