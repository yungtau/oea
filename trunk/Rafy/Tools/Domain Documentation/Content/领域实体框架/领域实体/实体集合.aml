<?xml version="1.0" encoding="utf-8"?>
<topic id="865b535e-d23f-45fe-912a-5b7759aa11a8" revisionNumber="1">
    <developerConceptualDocument
      xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
      xmlns:xlink="http://www.w3.org/1999/xlink">
        <introduction>
            <para>本文档正在整理中，敬请期待。</para>

            <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
            <!-- <autoOutline /> -->

            <para>实体列表类是实体的一个集合类型。一般很少在其中编写代码，但是它在框架中起到非常重要的作用</para>

            <para>实体集合表示一个实体的集合。开发人员可以在其中添加一组实体才有的相关业务逻辑。同时，实体集合在数据查询中扮演着数据传输的重要角色。</para>
            <para>
                所有的实体集合都直接或者间接地从 <codeEntityReference qualifyHint="true" autoUpgrade="true">T:Rafy.Domain.EntityList</codeEntityReference> 类继承。
            </para>
            <para>
                实体集合一般在组合父实体中以组合子实体集合的形式出现。你可以通过 <codeEntityReference qualifyHint="true" autoUpgrade="true">P:Rafy.Domain.EntityList.Parent</codeEntityReference> 属性来获取其所在的组合子实体。
            </para>
            <para>实体列表类型必须遵守以下命名约定：实体列表类型 = 实体类型名称 + "List"。</para>
        </introduction>

        <relatedTopics>
            <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
        </relatedTopics>
    </developerConceptualDocument>
</topic>
