<?xml version="1.0" encoding="utf-8"?>
<topic id="63a475a4-6639-4e2d-a53a-e8965e3372db" revisionNumber="1">
    <developerConceptualDocument
      xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
      xmlns:xlink="http://www.w3.org/1999/xlink">

        <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

        <introduction>
            <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
            <!-- <autoOutline /> -->

            <para>Required introduction</para>
        </introduction>

        <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
        <section address="Section1">
            <title>Optional section title</title>
            <content>
                <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
                <para>
                    实体的 Delegate（代理）属性一般是一个字符串属性，它的值用于表示当前的实体对象。例如，一个人的姓名可以代表这个人，所以人这个类中我们把它的 Name 属性设置为它的代理属性。所以，一般来说，可以认为这个属性是这个实体类的一个唯一键（但是不作强行要求）。
                </para>
                <para>
                    其实，主要是两点要求：
                    1 这个属性尽量是一个唯一标识属性，看到这个属性值就能知道是哪个对象。
                    2 这个属性是展示给客户看的。所以，如果相比一个单独的名称，客户如果更想看到 编码+名称 时，我们则应该设计一个返回 编码+名称 的只读属性作为代理属性。
                </para>
                <para>

                    在 IWMS 中，一般情况下，可以按照以下规则进行代理属性的设置：
                    如果该实体有 SName（简称），则可以设置 SName 作为它的代理属性。如果没有 SName，只有 Name（全称），则可以使用 Name 作为它的代理属性。二者都没有，则考虑使用一个可以展示给客户、也能唯一标识该对象的属性，例如使用编码。极少情况下，可以直接使用 Id。如果找不到，则可以构造一个只读属性，返回一个可唯一标识的字符串。
                </para>
            </content>
            <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
        </section>

        <relatedTopics>
            <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
        </relatedTopics>
    </developerConceptualDocument>
</topic>
