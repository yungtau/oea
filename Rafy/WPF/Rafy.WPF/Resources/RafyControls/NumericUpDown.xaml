<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:tkChromes="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=WPFToolkit.Extended"
        xmlns:rafy="clr-namespace:Rafy.WPF.Controls" xmlns:rafyModuleWPF="clr-namespace:Rafy.WPF"
        xmlns:rafyControls="clr-namespace:Rafy.WPF.Controls;assembly=Rafy.WPF.Controls"
        
        mc:Ignorable="d">

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Foreground="Gray" Focusable="False" Content="{Binding}" />
    </DataTemplate>

    <Style x:Key="NumericUpDown" TargetType="{x:Type Control}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Name="border" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                        <DockPanel>
                            <TextBlock Name="errorContent" DockPanel.Dock="Right" Visibility="Collapsed"
                                    Foreground="{DynamicResource ValidationErrorBrush}" FontWeight="Bold"
                                    VerticalAlignment="Center" Text=" * " />
                            <tk:ButtonSpinner x:Name="Spinner"
                                    AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsTabStop="False"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}">
                                <tk:WatermarkTextBox x:Name="TextBox"
                                        AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                        AcceptsReturn="False" BorderThickness="0" Background="Transparent" MinWidth="20"
                                        Padding="0" TextWrapping="NoWrap" ContextMenu="{TemplateBinding ContextMenu}"
                                        Foreground="{TemplateBinding Foreground}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontStyle="{TemplateBinding FontStyle}"
                                        FontStretch="{TemplateBinding FontStretch}"
                                        TabIndex="{TemplateBinding TabIndex}" FontSize="{TemplateBinding FontSize}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                        SelectAllOnGotFocus="{Binding SelectAllOnGotFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                        TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                        Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                        Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" />
                            </tk:ButtonSpinner>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="true" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource ValidationErrorBrush}" />
                            <Setter TargetName="errorContent" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DoubleUpDown -->
    <Style TargetType="{x:Type tk:DoubleUpDown}" BasedOn="{StaticResource NumericUpDown}">
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
    </Style>

    <!-- IntegerUpDown -->
    <Style TargetType="{x:Type tk:IntegerUpDown}" BasedOn="{StaticResource NumericUpDown}">
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
    </Style>
</ResourceDictionary>