<?xml version="1.0" encoding="utf-8"?>
<topic id="8120fc14-ef61-43cd-99a5-21c6edd5d38b" revisionNumber="1">
    <developerConceptualDocument
      xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
      xmlns:xlink="http://www.w3.org/1999/xlink">

        <introduction>
            <autoOutline />
        </introduction>

        <section address="des">
            <title>说明</title>
            <content>
                <para>更新或者读取数据时，传统的数据库访问方式可以只读取或者更新数据表中部分需要的字段即可，但是 ORM 框架一般是以实体对象的方式，来更新或者读取全部字段的数据。这样会有一定的性能问题。尤其在某些字段中的数据比较大的时候，性能问题更加严重，例如某个字段存储的是一张图片，又如存储文章内容的大字符串字段。</para>
                <para>Rafy 框架提供了“大数据属性”，它很好地处理了上述问题。例如，Article（文章）类中的 Content（文章内容）属性存储的是一篇文章的完整内容。当我们在显示一个文章的列表时，往往只需要显示文章的标题就可以了，不需要同时加载文章内容字段。如果把该属性设置为大数据属性时：</para>
                <list class="bullet">
                    <listItem>
                        <para>懒加载：当需要使用内容时，框架才会从数据库中加载该属性的值。</para>
                    </listItem>
                    <listItem>
                        <para>按需更新：当更新数据库时，只有对 Article 的 Content 属性变更后，对应的 Sql 更新语句中才会更新该字段。</para>
                    </listItem>
                </list>
            </content>
        </section>

        <section address="exap">
            <title>代码示例</title>
            <content>
                <para>
                    以下代码为 Article （文章）类声明了一个名称为 Content（内容）的冗余属性。
                </para>
                <code language="cs" title="属性声明示例">
                    <![CDATA[public static readonly LOBProperty<string> ContentProperty = P<Article>.RegisterLOB(e => e.Content);
public string Content
{
    get { return this.GetLOBProperty(ContentProperty); }
    set { this.SetLOBProperty(ContentProperty, value); }
}]]>
                </code>
            </content>
        </section>

        <relatedTopics>
        </relatedTopics>
    </developerConceptualDocument>
</topic>
